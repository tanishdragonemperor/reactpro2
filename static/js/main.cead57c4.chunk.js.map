{"version":3,"sources":["components/studentDataCard/StudentDataCard.module.css","components/icons/Icons.module.css","components/tagForm/TagForm.module.css","App.module.css","components/tag/Tag.module.css","components/contentFilter/ContentFilter.module.css","components/tagForm/TagForm.js","components/tag/Tag.js","components/icons/OpenIcon.js","components/icons/CloseIcon.js","components/studentDataCard/StudentDataCard.js","components/contentFilter/ContentFilter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","container","avatar","name","content","expandBtn","tagSubmit","extendedContent","input","App","contentContainer","tag","TagForm","_ref","addTag","index","_useState","useState","_useState2","Object","slicedToArray","newTag","setNewTag","react_default","a","createElement","onSubmit","e","preventDefault","className","styles","placeholder","type","value","onChange","target","Tag","OpenIcon","setShowGrades","showGrades","onClick","id","xmlns","viewBox","d","CloseIcon","UserDataCard","img","firstName","lastName","email","company","skill","averageGrade","grades","tags","src","alt","concat","toUpperCase","map","grade","key","toString","length","tag_Tag","tagForm_TagForm","icons_CloseIcon","icons_OpenIcon","ContentFilter","filterFunction","toLowerCase","trim","studentData","setStudentData","_useState3","_useState4","filterContent","setFilterContent","_useState5","_useState6","nameFilter","setNameFilter","_useState7","_useState8","tagFilter","setTagFilter","str","tagForStudentData","toConsumableArray","push","_fetchUrl","asyncToGenerator","regenerator_default","mark","_callee","url","response","json","newStudentData","wrap","_context","prev","next","fetch","sent","students","student","addTags","stop","apply","this","arguments","useEffect","_x","fetchUrl","contentFilter_ContentFilter","newNameFilter","includes","contentFilter","newTagFilter","newContentFilter","tagged","array","sum","i","parseInt","findAverage","StudentDataCard","pic","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cead57c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StudentDataCard_container__1Dxzs\",\"avatar\":\"StudentDataCard_avatar__2nWGt\",\"name\":\"StudentDataCard_name__tjpIN\",\"content\":\"StudentDataCard_content__2OIyD\",\"expandBtn\":\"StudentDataCard_expandBtn__180DE\",\"tagSubmit\":\"StudentDataCard_tagSubmit__2ju5b\",\"extendedContent\":\"StudentDataCard_extendedContent__1bc6J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expandBtn\":\"Icons_expandBtn__3YYgX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TagForm_input__3WTjQ\",\"tagSubmit\":\"TagForm_tagSubmit__1zLcC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1yH0f\",\"contentContainer\":\"App_contentContainer__d8rcl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"Tag_tag__3MFbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContentFilter_input__3tta7\"};","import React, { useState } from \"react\";\nimport styles from \"./TagForm.module.css\";\n\nconst TagForm = ({ addTag, index }) => {\n  const [newTag, setNewTag] = useState(\"\");\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        addTag(newTag, index);\n        setNewTag(\"\");\n      }}\n    >\n      <input\n        className={styles.input}\n        placeholder=\"Add a tag\"\n        type=\"text\"\n        value={newTag}\n        onChange={e => {\n          setNewTag(e.target.value);\n        }}\n      />\n      <input className={styles.tagSubmit} type=\"submit\" />\n    </form>\n  );\n};\n\nexport default TagForm;\n","import React from \"react\";\nimport styles from \"./Tag.module.css\";\n\nconst Tag = ({ tag }) => {\n  return <div className={styles.tag}>{tag}</div>;\n};\n\nexport default Tag;\n","import React from \"react\";\nimport styles from \"./Icons.module.css\";\n\n//please note:  I did not write the pathing myself.  I took an svg icon and converted it to react.\nconst OpenIcon = ({ setShowGrades, showGrades }) => {\n  return (\n    <svg\n      className={styles.expandBtn}\n      onClick={() => {\n        setShowGrades(!showGrades);\n      }}\n      id=\"Capa_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 42 42\"\n    >\n      <path d=\"M37.059,16H26V4.941C26,2.224,23.718,0,21,0s-5,2.224-5,4.941V16H4.941C2.224,16,0,18.282,0,21s2.224,5,4.941,5H16v11.059\tC16,39.776,18.282,42,21,42s5-2.224,5-4.941V26h11.059C39.776,26,42,23.718,42,21S39.776,16,37.059,16z\" />\n    </svg>\n  );\n};\n\nexport default OpenIcon;\n","import React from \"react\";\nimport styles from \"./Icons.module.css\";\n\n//please note:  I did not write the pathing myself.  I took an svg icon and converted it to react.\nconst CloseIcon = ({ setShowGrades, showGrades }) => {\n  return (\n    <svg\n      className={styles.expandBtn}\n      onClick={() => {\n        setShowGrades(!showGrades);\n      }}\n      id=\"Capa_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 42 42\"\n    >\n      <path d=\"M37.059,16H26H16H4.941C2.224,16,0,18.282,0,21s2.224,5,4.941,5H16h10h11.059C39.776,26,42,23.718,42,21\tS39.776,16,37.059,16z\" />\n    </svg>\n  );\n};\n\nexport default CloseIcon;\n","import React, { useState } from \"react\";\nimport TagForm from \"../tagForm/TagForm\";\nimport Tag from \"../tag/Tag\";\nimport OpenIcon from \"../icons/OpenIcon\";\nimport CloseIcon from \"../icons/CloseIcon\";\nimport styles from \"./StudentDataCard.module.css\";\n\nconst UserDataCard = ({\n  index,\n  img,\n  firstName,\n  lastName,\n  email,\n  company,\n  skill,\n  averageGrade,\n  grades,\n  tags,\n  addTag,\n}) => {\n  const [showGrades, setShowGrades] = useState(false);\n  return (\n    <div className={styles.container}>\n      <img src={img} className={styles.avatar} alt=\"avatar\" />\n      <h1\n        className={styles.name}\n      >{`${firstName.toUpperCase()} ${lastName.toUpperCase()}`}</h1>\n      <div className={styles.content}>\n        <div>Email: {email}</div>\n        <div>Company: {company}</div>\n        <div>Skill: {skill}</div>\n        <div>Average: {averageGrade}%</div>\n        {showGrades && (\n          <div className={styles.extendedContent}>\n            {grades.map((grade, index) => {\n              return (\n                <div key={index.toString()}>\n                  {`test${index}:\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0${grade}%`}\n                </div>\n              );\n            })}\n            {tags.length > 0\n              ? tags.map((tag, index) => {\n                  return <Tag key={index.toString()} tag={tag} />;\n                })\n              : null}\n            <TagForm index={index} addTag={addTag} />\n          </div>\n        )}\n      </div>\n      {showGrades ? (\n        <CloseIcon\n          className={styles.expandBtn}\n          setShowGrades={setShowGrades}\n          showGrades={showGrades}\n        />\n      ) : (\n        <OpenIcon\n          className={styles.expandBtn}\n          setShowGrades={setShowGrades}\n          showGrades={showGrades}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UserDataCard;\n","import React from \"react\";\nimport styles from \"./ContentFilter.module.css\";\n\nconst ContentFilter = ({ filterFunction, type }) => {\n  return (\n    <input\n      className={styles.input}\n      placeholder={`Search by ${type}`}\n      onChange={e => {\n        filterFunction(e.target.value.toLowerCase().trim());\n      }}\n    />\n  );\n};\nexport default ContentFilter;\n","import React, { useState, useEffect } from \"react\";\nimport StudentDataCard from \"./components/studentDataCard/StudentDataCard\";\nimport ContentFilter from \"./components/contentFilter/ContentFilter\";\nimport styles from \"./App.module.css\";\n//Chose to use modular css to make the css more obviously tied to the relevant components\n\nfunction App() {\n  //We're using state in this app instead of redux or useReducer+useContext\n  //This is because state management is simple in this app\n  //and we have a relatively flat component structure\n  const [studentData, setStudentData] = useState([]);\n  const [filterContent, setFilterContent] = useState([]);\n  const [nameFilter, setNameFilter] = useState([]);\n  const [tagFilter, setTagFilter] = useState([]);\n  // we use nameFilter and tagFilter as references so that\n  //both filters can be active simultaneously.\n  //If we were to scale this with many more filter options\n  //I would consider finding a different solution or\n  //building out a library for it.\n\n  const addTag = (str, index) => {\n    const tagForStudentData = [...studentData];\n    tagForStudentData[index].tags.push(str);\n    setStudentData(tagForStudentData);\n  };\n\n  // filter functions for sorting content\n  const nameFilterFunction = str => {\n    let newNameFilter = [];\n    studentData.map(student => {\n      const fullName = `${student.firstName} ${student.lastName}`.toLowerCase();\n      if (fullName.includes(str)) {\n        newNameFilter.push(student);\n      }\n    });\n    let contentFilter = [];\n    tagFilter.map(student => {\n      const fullName = `${student.firstName} ${student.lastName}`.toLowerCase();\n      if (fullName.includes(str)) {\n        contentFilter.push(student);\n      }\n    });\n    setFilterContent(contentFilter);\n    setNameFilter(newNameFilter);\n  };\n\n  const tagFilterFunction = str => {\n    if (str) {\n      let newTagFilter = [];\n      let newContentFilter = [];\n      studentData.map(student => {\n        let tagged = false;\n        student.tags.map(tag => {\n          if (tag.includes(str)) {\n            tagged = true;\n          }\n        });\n        if (tagged) {\n          newTagFilter.push(student);\n        }\n      });\n      filterContent.map(student => {\n        let tagged = false;\n        student.tags.map(tag => {\n          if (tag.includes(str)) {\n            tagged = true;\n          }\n        });\n        if (tagged) {\n          newContentFilter.push(student);\n        }\n      });\n      setFilterContent(newContentFilter);\n      setTagFilter(newTagFilter);\n    } else {\n      setFilterContent(nameFilter);\n      setTagFilter(studentData);\n    }\n  };\n\n  //api call\n  async function fetchUrl(url) {\n    const response = await fetch(url);\n    const json = await response.json();\n    let newStudentData = [];\n    json.students.map(student => {\n      let addTags = student;\n      addTags.tags = [];\n      newStudentData.push(addTags);\n    });\n    setStudentData(newStudentData);\n    setFilterContent(newStudentData);\n    setNameFilter(newStudentData);\n    setTagFilter(newStudentData);\n  }\n\n  useEffect(() => {\n    fetchUrl(`https://www.hatchways.io/api/assessment/students`);\n  }, []);\n  return (\n    <div className={styles.App}>\n      <div className={styles.contentContainer}>\n        <ContentFilter filterFunction={nameFilterFunction} type={`name`} />\n        <ContentFilter filterFunction={tagFilterFunction} type={`tag`} />\n        {filterContent.map((student, index) => {\n          function findAverage(array) {\n            let sum = 0;\n            for (let i = 0; i < array.length; i++) {\n              sum += parseInt(array[i]);\n            }\n            let average = sum / array.length;\n            return average;\n          }\n          const averageGrade = findAverage(student.grades);\n          return (\n            <StudentDataCard\n              key={index.toString()}\n              index={index}\n              img={student.pic}\n              firstName={student.firstName}\n              lastName={student.lastName}\n              email={student.email}\n              company={student.company}\n              skill={student.skill}\n              grades={student.grades}\n              averageGrade={averageGrade}\n              tags={student.tags}\n              addTag={addTag}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}